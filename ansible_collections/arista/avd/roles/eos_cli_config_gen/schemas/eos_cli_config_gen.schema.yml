type: dict
allow_other_keys: true
keys:
  aaa_authentication:
    type: dict
    display_name: AAA Authentication
    keys:
      login:
        type: dict
        keys:
          default:
            type: str
            description: 'Login authentication method(s) as a string.

              Examples:

              - "group tacacs+ local"

              - "group MYGROUP none"

              - "group radius group MYGROUP local"

              '
          console:
            type: str
            description: 'Console authentication method(s) as a string.

              Examples:

              - "group tacacs+ local"

              - "group MYGROUP none"

              - "group radius group MYGROUP local"

              '
      enable:
        type: dict
        keys:
          default:
            type: str
            description: 'Enable authentication method(s) as a string.

              Examples:

              - "group tacacs+ local"

              - "group MYGROUP none"

              - "group radius group MYGROUP local"

              '
      dot1x:
        type: dict
        keys:
          default:
            type: str
            description: '802.1x authentication method(s) as a string.

              Examples:

              - "group radius"

              - "group MYGROUP group radius"

              '
      policies:
        type: dict
        keys:
          on_failure_log:
            type: bool
          on_success_log:
            type: bool
          local:
            type: dict
            keys:
              allow_nopassword:
                type: bool
          lockout:
            type: dict
            keys:
              failure:
                type: int
                min: 1
                max: 255
                convert_types:
                - str
              duration:
                type: int
                min: 1
                max: 4294967295
                convert_types:
                - str
              window:
                type: int
                min: 1
                max: 4294967295
                convert_types:
                - str
  aaa_authorization:
    type: dict
    display_name: AAA Authorization
    keys:
      exec:
        type: dict
        keys:
          default:
            type: str
            description: 'Exec authorization method(s) as a string.

              Examples:

              - "group tacacs+ local"

              - "group MYGROUP none"

              - "group radius group MYGROUP local"

              '
      config_commands:
        type: bool
      serial_console:
        type: bool
      commands:
        type: dict
        keys:
          all_default:
            type: str
            description: 'Command authorization method(s) as a string.

              Examples:

              - "group tacacs+ local"

              - "group MYGROUP none"

              - "group tacacs+ group MYGROUP local

              '
          privilege:
            type: list
            items:
              type: dict
              keys:
                level:
                  type: str
                  description: Privilege level(s) 0-15
                  convert_types:
                  - int
                default:
                  type: str
                  description: 'Command authorization method(s) as a string.

                    Examples:

                    - "group tacacs+ local"

                    - "group MYGROUP none"

                    - "group tacacs+ group MYGROUP local"'
  aaa_root:
    type: dict
    display_name: AAA Root
    keys:
      secret:
        type: dict
        keys:
          sha512_password:
            type: str
  access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IP Extended Access-Lists (legacy model)
    description: 'AVD currently supports 2 different data models for extended ACLs:


      - The legacy `access_lists` data model, for compatibility with existing deployments

      - The improved `ip_access_lists` data model, for access to more EOS features


      Both data models can coexists without conflicts, as different keys are used:
      `access_lists` vs `ip_access_lists`.

      Access list names must be unique.


      The legacy data model supports simplified ACL definition with `sequence` to
      `action` mapping:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ip any any"'
  as_path:
    type: dict
    keys:
      regex_mode:
        type: str
        valid_values:
        - asn
        - string
      access_lists:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Access List Name
            entries:
              type: list
              items:
                type: dict
                keys:
                  type:
                    type: str
                    valid_values:
                    - permit
                    - deny
                  match:
                    type: str
                    display_name: Regex To Match
                  origin:
                    type: str
                    valid_values:
                    - any
                    - egp
                    - igp
                    - incomplete
                    default: any
  banners:
    type: dict
    keys:
      login:
        type: str
        description: Multiline string ending with EOF on the last line
      motd:
        type: str
        description: Multiline string ending with EOF on the last line
  bgp_groups:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Group Name
        vrf:
          type: str
          display_name: VRF
        neighbors:
          type: list
          items:
            type: str
        bgp_maintenance_profiles:
          type: list
          items:
            type: str
            display_name: Profile Name
  boot:
    display_name: System Boot Settings
    description: 'Set the Aboot password

      '
    type: dict
    keys:
      secret:
        type: dict
        keys:
          hash_algorithm:
            type: str
            valid_values:
            - md5
            - sha512
            default: sha512
          key:
            display_name: Hashed Password
            type: str
  class_maps:
    type: dict
    display_name: QOS Class-maps
    keys:
      pbr:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Class-Map Name
            ip:
              type: dict
              keys:
                access_group:
                  type: str
                  display_name: Standard Access-List Name
      qos:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Class-Map Name
            vlan:
              type: int
              convert_types:
              - str
              description: VLAN value(s) or range(s) of VLAN values
            cos:
              type: int
              convert_types:
              - str
              description: CoS value(s) or range(s) of CoS values
            ip:
              type: dict
              keys:
                access_group:
                  type: str
                  display_name: IPv4 Access-List Name
            ipv6:
              type: dict
              keys:
                access_group:
                  type: str
                  display_name: IPv6 Access-List Name
  clock:
    type: dict
    keys:
      timezone:
        type: str
  community_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Community Lists (legacy model)
    description: 'AVD supports 2 different data models for community lists:


      - The legacy `community_lists` data model that can be used for compatibility
      with the existing deployments.

      - The improved `ip_community_lists` data model.


      Both data models can coexist without conflicts, as different keys are used:
      `community_lists` vs `ip_community_lists`.

      Community list names must be unique.


      The legacy data model supports simplified community list definition that only
      allows a single action to be defined as string:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        action:
          type: str
          required: true
          description: 'Action as string

            Example: "permit GSHUT 65123:123"'
  custom_templates:
    type: list
    display_name: Extensibility with Custom Templates
    description: "- Custom templates can be added below the playbook directory.\n-
      If a location above the directory is desired, a symbolic link can be used.\n-
      Example under the `playbooks` directory create symbolic link with the following
      command:\n\n  ```bash\n  ln -s ../../shared_repo/custom_avd_templates/ ./custom_avd_templates\n
      \ ```\n\n- The output will be rendered at the end of the configuration.\n- The
      order of custom templates in the list can be important if they overlap.\n- It
      is recommenended to use a `!` delimiter at the top of each custom template.\n\nAdd
      `custom_templates` to group/host variables:\n"
    items:
      type: str
      description: Template relative path below playbook directory
  cvx:
    type: dict
    display_name: CVX
    description: CVX server features are not supported on physical switches. See `management_cvx`
      for client configurations.
    keys:
      shutdown:
        type: bool
      services:
        type: dict
        keys:
          mcs:
            type: dict
            display_name: MCS
            keys:
              redis:
                type: dict
                keys:
                  password:
                    type: str
                    description: Hashed password using the password_type
                  password_type:
                    type: str
                    convert_types:
                    - int
                    valid_values:
                    - '0'
                    - '7'
                    - 8a
                    default: '7'
              shutdown:
                type: bool
  daemon_terminattr:
    type: dict
    display_name: Daemon TerminAttr
    description: "You can either provide a list of IPs/FQDNs to target on-premise
      Cloudvision cluster or use DNS name for your Cloudvision as a Service instance.\nStreaming
      to multiple clusters both on-prem and cloud service is supported.\n> Note For
      TerminAttr version recommendation and EOS compatibility matrix, please refer
      to the latest TerminAttr Release Notes\n  which always contain the latest recommended
      versions and minimum required versions per EOS release.\n"
    keys:
      cvaddrs:
        type: list
        description: 'Streaming address(es) for CloudVision single cluster

          - TCP 9910 is used for CV on-prem

          - TCP 443 is used for CV as a Service

          '
        items:
          type: str
          description: Server address in the format `<ip/fqdn>:<port>`
      clusters:
        type: list
        description: 'Multiple CloudVision clusters

          '
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Cluster Name
            cvaddrs:
              type: list
              description: 'Streaming address(es) for CloudVision cluster

                - TCP 9910 is used for CV on-prem

                - TCP 443 is used for CV as a Service

                '
              items:
                type: str
                description: Server address in the format `<ip/fqdn>:<port>`
            cvauth:
              type: dict
              description: 'Authentication scheme used to connect to CloudVision

                '
              keys:
                method:
                  type: str
                  valid_values:
                  - token
                  - token-secure
                  - key
                key:
                  type: str
                token_file:
                  type: str
                  description: 'Token file path

                    e.g. "/tmp/token"

                    '
            cvobscurekeyfile:
              type: bool
              display_name: Obscure Key File
              description: 'Encrypt the private key used for authentication to CloudVision

                '
            cvproxy:
              type: str
              display_name: Proxy URL
              description: 'Proxy server through which CloudVision is reachable. Useful
                when the CloudVision server is hosted in the cloud.

                The expected form is http://[user:password@]ip:port, e.g.: ''http://arista:arista@10.83.12.78:3128''.
                Available as of TerminAttr v1.13.0

                '
            cvsourceip:
              type: str
              display_name: Source IP Address
              description: 'Set source IP address in case of in-band managament

                '
            cvvrf:
              type: str
              display_name: VRF
              description: 'The VRF to use to connect to CloudVision

                '
      cvauth:
        type: dict
        description: 'Authentication scheme used to connect to CloudVision

          '
        keys:
          method:
            type: str
            valid_values:
            - token
            - token-secure
            - key
          key:
            type: str
          token_file:
            type: str
            description: 'Token file path

              e.g. "/tmp/token"

              '
      cvobscurekeyfile:
        type: bool
        display_name: Obscure Key File
        description: 'Encrypt the private key used for authentication to CloudVision

          '
      cvproxy:
        type: str
        display_name: Proxy URL
        description: 'Proxy server through which CloudVision is reachable. Useful
          when the CloudVision server is hosted in the cloud.

          The expected form is http://[user:password@]ip:port, e.g.: ''http://arista:arista@10.83.12.78:3128''.
          Available as of TerminAttr v1.13.0

          '
      cvsourceip:
        type: str
        display_name: Source IP Address
        description: 'Set source IP address in case of in-band managament

          '
      cvvrf:
        type: str
        display_name: VRF
        description: 'The VRF to use to connect to CloudVision

          '
      cvgnmi:
        type: bool
        description: 'Stream states from EOS GNMI servers (Openconfig) to CloudVision.
          Available as of TerminAttr v1.13.1

          '
      disable_aaa:
        type: bool
        description: 'Disable AAA authorization and accounting.

          When setting this flag, all commands pushed from CloudVision are applied
          directly to the CLI without authorization

          '
      grpcaddr:
        type: str
        description: 'Set the gRPC server address, the default is 127.0.0.1:6042

          e.g. "MGMT/0.0.0.0:6042"

          '
      grpcreadonly:
        type: bool
        description: 'gNMI read-only mode - Disable gnmi.Set()

          '
      ingestexclude:
        type: str
        description: 'Exclude paths from Sysdb on the ingest side.

          e.g. "/Sysdb/cell/1/agent,/Sysdb/cell/2/agent"

          '
      smashexcludes:
        type: str
        description: 'Exclude paths from the shared memory table.

          e.g. "ale,flexCounter,hardware,kni,pulse,strata"

          '
      taillogs:
        type: str
        description: 'Enable log file collection; /var/log/messages is streamed by
          default if no path is set.

          e.g. "/var/log/messages"

          '
      ecodhcpaddr:
        type: str
        description: 'ECO DHCP Collector address or ECO DHCP Fingerprint listening
          address in standalone mode (default "127.0.0.1:67")

          '
      ipfix:
        type: bool
        description: 'Enable IPFIX provider (TerminAttr default is true).

          This flag is enabled by default and does not have to be added to the daemon
          configuration.

          '
      ipfixaddr:
        type: str
        description: 'ECO IPFIX Collector address to listen on to receive IPFIX packets
          (TerminAttr default "127.0.0.1:4739").

          '
      sflow:
        type: bool
        description: 'Enable sFlow provider (TerminAttr default is true).

          '
      sflowaddr:
        type: str
        description: 'ECO sFlow Collector address to listen on to receive sFlow packets
          (TerminAttr default "127.0.0.1:6343").

          '
      cvcompression:
        type: str
        description: 'The default compression scheme when streaming to CloudVision
          is gzip since TerminAttr 1.6.1 and CVP 2019.1.0.

          There is no need to change the compression scheme.

          '
      ingestauth_key:
        type: str
        description: 'Deprecated key. Use `cvauth` instead.

          '
      ingestgrpcurl:
        type: dict
        description: 'Deprecated key. Use `cvaddrs` instead.

          '
        keys:
          ips:
            type: list
            items:
              type: str
          port:
            type: int
            convert_types:
            - str
      ingestvrf:
        description: 'Deprecated key. Use `cvvrf` instead.

          '
        type: str
  daemons:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Custom Daemons
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Daemon Name
        exec:
          type: str
          required: true
          description: 'command to run as a daemon

            '
        enabled:
          type: bool
          default: true
  dhcp_relay:
    type: dict
    display_name: DHCP Relay
    keys:
      servers:
        type: list
        items:
          type: str
          display_name: Server IP or Hostname
      tunnel_requests_disabled:
        type: bool
  dns_domain:
    type: str
    display_name: DNS Domain
    description: Domain Name
  domain_list:
    type: list
    description: Search list of DNS domains
    items:
      type: str
      description: Domain name
  dot1x:
    type: dict
    display_name: Global 802.1x Authentication
    keys:
      system_auth_control:
        type: bool
      protocol_lldp_bypass:
        type: bool
        display_name: Protocol LLDP Bypass
      dynamic_authorization:
        type: bool
  enable_password:
    type: dict
    keys:
      hash_algorithm:
        type: str
        valid_values:
        - md5
        - sha512
      key:
        type: str
        description: 'Must be the hash of the password using the specified algorithm.

          By default EOS salts the password, so the simplest is to generate the hash
          on an EOS device.'
  eos_cli:
    type: str
    display_name: EOS CLI
    description: Multiline string with EOS CLI rendered directly on the root level
      of the final EOS configuration
  event_handlers:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Event Handlers
    items:
      type: dict
      keys:
        name:
          type: str
          display_name: Event Handler Name
        action_type:
          type: str
          display_name: Action Type
          description: 'Type of action

            '
          valid_values:
          - bash
          - increment
          - log
        action:
          type: str
          description: 'Command to execute

            '
        delay:
          type: int
          description: 'Event-handler delay in seconds

            '
        trigger:
          type: str
          description: 'Configure event trigger condition.

            '
          valid_values:
          - on-logging
        regex:
          type: str
          description: 'Regular expression to use for searching log messages. Required
            for on-logging trigger

            '
        asynchronous:
          type: bool
          default: false
          description: Set the action to be non-blocking.
  event_monitor:
    type: dict
    keys:
      enabled:
        type: bool
  generate_default_config:
    type: bool
    default: true
    description: 'The `generate_default_config` knob allows to omit default EOS configuration.

      This can be useful when leveraging `eos_cli_config_gen` to generate configlets
      with CloudVision.


      The following commands will be omitted when `generate_default_config` is set
      to `false`:


      - RANCID Content Type

      - Hostname

      - Default configuration for `aaa`

      - Default configuration for `enable password`

      - Transceiver qsfp default mode

      - End of configuration delimiter'
  generate_device_documentation:
    type: bool
    default: true
  interface_defaults:
    type: dict
    keys:
      ethernet:
        type: dict
        keys:
          shutdown:
            type: bool
      mtu:
        type: int
        convert_types:
        - str
  interface_groups:
    type: list
    display_name: Maintenance Interface Groups
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Interface-Group name
        interfaces:
          type: list
          items:
            type: str
            description: Interface Name
        bgp_maintenance_profiles:
          type: list
          items:
            type: str
            description: Name of BGP Maintenance Profile
        interface_maintenance_profiles:
          type: list
          items:
            type: str
            description: Name of Interface Maintenance Profile
  interface_profiles:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Interface-Profile Name
        commands:
          type: list
          required: true
          items:
            type: str
            description: 'EOS CLI interface command

              Example: "switchport mode access"'
  ip_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IP Extended Access-Lists (improved model)
    description: 'AVD currently supports 2 different data models for extended ACLs:


      - The legacy `access_lists` data model, for compatibility with existing deployments

      - The improved `ip_access_lists` data model, for access to more EOS features


      Both data models can coexists without conflicts, as different keys are used:
      `access_lists` vs `ip_access_lists`.

      Access list names must be unique.


      The improved data model has a more sophisticated design documented below:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        entries:
          type: list
          display_name: ACL Entries
          items:
            type: dict
            keys:
              sequence:
                type: int
                convert_types:
                - str
                description: 'ACL entry sequence number.

                  '
              remark:
                type: str
                description: 'Comment up to 100 characters.

                  If remark is defined, other keys in acl entry will be ignored.

                  '
              action:
                type: str
                valid_values:
                - permit
                - deny
                description: 'ACL action.

                  Required for standard entry.

                  '
              protocol:
                type: str
                description: 'ip, tcp, udp, icmp or other protocol name or number.

                  Required for standard entry.

                  '
              source:
                type: str
                description: 'any, A.B.C.D/E or A.B.C.D.

                  A.B.C.D without a mask means host.

                  Required for standard entry.

                  '
              source_ports_match:
                type: str
                valid_values:
                - eq
                - gt
                - lt
                - neq
                - range
                default: eq
              source_ports:
                type: list
                items:
                  type: str
                  convert_types:
                  - int
                  description: TCP/UDP source port name or number.
              destination:
                type: str
                description: 'any, A.B.C.D/E or A.B.C.D.

                  A.B.C.D without a mask means host.

                  Required for standard entry.

                  '
              destination_ports_match:
                type: str
                valid_values:
                - eq
                - gt
                - lt
                - neq
                - range
                default: eq
              destination_ports:
                type: list
                items:
                  type: str
                  convert_types:
                  - int
                  description: TCP/UDP destination port name or number.
              tcp_flags:
                type: list
                items:
                  type: str
                  display_name: TCP Flag Name
              fragments:
                type: bool
                description: Match non-head fragment packets.
              log:
                type: bool
                description: Log matches against this rule.
              ttl:
                type: int
                display_name: TTL value
                convert_types:
                - str
                min: 0
                max: 254
              ttl_match:
                type: str
                valid_values:
                - eq
                - gt
                - lt
                - neq
                default: eq
              icmp_type:
                type: str
                convert_types:
                - int
                description: Message type name/number for ICMP packets.
              icmp_code:
                type: str
                convert_types:
                - int
                description: Message code for ICMP packets.
              nexthop_group:
                type: str
                description: nexthop-group name.
              tracked:
                type: bool
                description: Match packets in existing ICMP/UDP/TCP connections.
              dscp:
                type: str
                convert_types:
                - int
                description: DSCP value or name.
              vlan_number:
                type: int
                convert_types:
                - str
              vlan_inner:
                type: bool
                default: false
              vlan_mask:
                type: str
                description: 0x000-0xFFF VLAN mask.
  ip_community_lists:
    type: list
    secondary_key: entries
    primary_key: name
    convert_types:
    - dict
    display_name: IP Community Lists
    description: "AVD supports 2 different data models for community lists:\n\n- The
      legacy `community_lists` data model that can be used for compatibility with
      the existing deployments.\n- The improved `ip_community_lists` data model.\n\nBoth
      data models can coexist without conflicts, as different keys are used: `community_lists`
      vs `ip_community_lists`.\nCommunity list names must be unique.\n\nThe improved
      data model has a better design documented below:\n\ncommunities and regexp MUST
      not be configured together in the same entry\npossible community strings are
      (case insensitive):\n - GSHUT\n - internet\n - local-as\n - no-advertise\n -
      no-export\n - <1-4294967040>\n - aa:nn\n"
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: IP Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              action:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              communities:
                type: list
                items:
                  type: str
                description: If defined, a standard community-list will be configured
              regexp:
                type: str
                display_name: Regular Expression
                description: If defined, a regex community-list will be configured
  ip_dhcp_relay:
    type: dict
    display_name: IP DHCP Relay
    keys:
      information_option:
        type: bool
        description: Insert Option-82 information
  ip_domain_lookup:
    type: dict
    display_name: Domain Lookup
    keys:
      source_interfaces:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              description: 'Source Interface

                '
            vrf:
              type: str
              display_name: VRF
  ip_extcommunity_lists:
    type: list
    primary_key: name
    secondary_key: entries
    convert_types:
    - dict
    display_name: IP Extended Community Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              extcommunities:
                type: str
                required: true
                description: 'Communities as string

                  Example: "65000:65000"'
  ip_extcommunity_lists_regexp:
    type: list
    primary_key: name
    secondary_key: entries
    convert_types:
    - dict
    display_name: IP Extended Community Lists RegExp
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              regexp:
                type: str
                required: true
                description: Regular Expression
  ip_http_client_source_interfaces:
    type: list
    display_name: IP HTTP Client Source Interfaces
    items:
      type: dict
      keys:
        name:
          display_name: Interface Name
          type: str
        vrf:
          display_name: VRF
          type: str
  ip_icmp_redirect:
    type: bool
    display_name: IP ICMP Redirect
  ip_igmp_snooping:
    type: dict
    display_name: IP IGMP Snooping
    keys:
      globally_enabled:
        type: bool
        default: true
      robustness_variable:
        type: int
        convert_types:
        - str
      restart_query_interval:
        type: int
        convert_types:
        - str
      interface_restart_query:
        type: int
        convert_types:
        - str
      fast_leave:
        type: bool
      querier:
        type: dict
        keys:
          enabled:
            type: bool
          address:
            type: str
            display_name: IP Address
          query_interval:
            type: int
            convert_types:
            - str
          max_response_time:
            type: int
            convert_types:
            - str
          last_member_query_interval:
            type: int
            convert_types:
            - str
          last_member_query_count:
            type: int
            convert_types:
            - str
          startup_query_interval:
            type: int
            convert_types:
            - str
          startup_query_count:
            type: int
            convert_types:
            - str
          version:
            type: int
            convert_types:
            - str
      proxy:
        type: bool
      vlans:
        type: list
        primary_key: id
        convert_types:
        - dict
        items:
          type: dict
          keys:
            id:
              type: int
              convert_types:
              - str
              required: true
              display_name: VLAN ID
            enabled:
              type: bool
            querier:
              type: dict
              keys:
                enabled:
                  type: bool
                address:
                  type: str
                  display_name: IP Address
                query_interval:
                  type: int
                  convert_types:
                  - str
                max_response_time:
                  type: int
                  convert_types:
                  - str
                last_member_query_interval:
                  type: int
                  convert_types:
                  - str
                last_member_query_count:
                  type: int
                  convert_types:
                  - str
                startup_query_interval:
                  type: int
                  convert_types:
                  - str
                startup_query_count:
                  type: int
                  convert_types:
                  - str
                version:
                  type: int
                  convert_types:
                  - str
            max_groups:
              type: int
              convert_types:
              - str
            fast_leave:
              type: bool
            proxy:
              type: bool
              description: Global proxy settings should be enabled before enabling
                per-vlan
  ip_radius_source_interfaces:
    type: list
    display_name: IP RADIUS Source Interfaces
    items:
      type: dict
      keys:
        name:
          type: str
          display_name: Interface Name
        vrf:
          type: str
          display_name: VRF Name
  ip_routing:
    type: bool
    display_name: IP Routing
  ip_routing_ipv6_interfaces:
    type: bool
    display_name: IP Routing IPv6 Interfaces
  ip_ssh_client_source_interfaces:
    type: list
    display_name: IP SSH Client Source Interfaces
    items:
      type: dict
      keys:
        name:
          display_name: Interface Name
          type: str
        vrf:
          display_name: VRF
          type: str
          default: default
  ipv6_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Extended Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: IPv6 Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ipv6 any any"'
  ipv6_hardware:
    display_name: IPv6 Hardware
    type: dict
    keys:
      fib:
        type: dict
        keys:
          optimize:
            type: dict
            keys:
              prefixes:
                type: dict
                keys:
                  profile:
                    type: str
                    description: Pre-defined profile 'internet' or user-defined profile
                      name
  ipv6_icmp_redirect:
    type: bool
    display_name: IPv6 ICMP Redirect
  ipv6_prefix_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Prefix Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Prefix-list Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "permit 1b11:3a00:22b0:0082::/64 eq 128"'
  ipv6_standard_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Standard Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ipv6 any any"'
  lacp:
    type: dict
    display_name: LACP
    description: Set Link Aggregation Control Protocol (LACP) parameters.
    keys:
      port_id:
        type: dict
        description: LACP port-ID range configuration.
        keys:
          range:
            type: dict
            keys:
              begin:
                type: int
                description: Minimum LACP port-ID range.
              end:
                type: int
                description: Maximum LACP port-ID range.
      rate_limit:
        type: dict
        description: Set LACPDU rate limit options.
        keys:
          default:
            type: bool
            description: Enable LACPDU rate limiting by default on all ports.
      system_priority:
        type: int
        description: Set local system LACP priority.
        min: 0
        max: 65535
  load_interval:
    type: dict
    keys:
      default:
        type: int
        description: Default load interval in seconds
        convert_types:
        - str
  local_users:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          display_name: Username
          type: str
          required: true
        privilege:
          type: int
          convert_types:
          - str
          min: 1
          max: 15
          description: 'Initial privilege level with local EXEC authorization.

            '
        role:
          type: str
          description: 'EOS RBAC Role to be assigned to the user such as "network-admin"
            or "network-operator"

            '
        sha512_password:
          display_name: SHA512 Hash of Password
          type: str
          description: 'Must be the hash of the password. By default EOS salts the
            password with the username, so the simplest is to generate the hash on
            an EOS device using the same username.

            '
        no_password:
          type: bool
          description: 'If set a password will not be configured for this user. "sha512_password"
            MUST not be defined for this user.

            '
        ssh_key:
          display_name: SSH Key
          type: str
  mac_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: MAC Access-list Name
        counters_per_entry:
          type: bool
        entries:
          type: list
          items:
            type: dict
            keys:
              sequence:
                type: int
                convert_types:
                - str
              action:
                type: str
  mac_security:
    type: dict
    display_name: MACsec
    keys:
      license:
        type: dict
        required: true
        keys:
          license_name:
            type: str
            required: true
          license_key:
            type: str
            required: true
      fips_restrictions:
        type: bool
        required: true
      profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Profile-Name
            cipher:
              type: str
              valid_values:
              - aes128-gcm
              - aes128-gcm-xpn
              - aes256-gcm
              - aes256-gcm-xpn
            connection_keys:
              type: list
              primary_key: id
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  id:
                    type: str
                  encrypted_key:
                    type: str
                  fallback:
                    type: bool
            mka:
              type: dict
              keys:
                session:
                  type: dict
                  keys:
                    rekey_period:
                      type: int
                      convert_types:
                      - str
                      min: 30
                      max: 100000
                      description: Rekey period in seconds
            sci:
              type: bool
  maintenance:
    type: dict
    display_name: Maintenance Mode
    keys:
      default_interface_profile:
        type: str
        description: 'Name of default Interface Profile

          '
      default_bgp_profile:
        type: str
        description: 'Name of default BGP Profile

          '
      default_unit_profile:
        type: str
        description: 'Name of default Unit Profile

          '
      interface_profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
            rate_monitoring:
              type: dict
              keys:
                load_interval:
                  type: int
                  convert_types:
                  - str
                  description: 'Load Interval in Seconds

                    '
                threshold:
                  type: int
                  convert_types:
                  - str
                  description: 'Threshold in kbps

                    '
            shutdown:
              type: dict
              keys:
                max_delay:
                  type: int
                  convert_types:
                  - str
                  description: 'Max delay in seconds

                    '
      bgp_profiles:
        type: list
        display_name: BGP Profiles
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: BGP Profile Name
            initiator:
              type: dict
              keys:
                route_map_inout:
                  type: str
                  display_name: Route Map
      unit_profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Unit Profile Name
            on_boot:
              type: dict
              keys:
                duration:
                  type: int
                  convert_types:
                  - str
                  min: 300
                  max: 3600
                  description: 'On-boot in seconds

                    '
      units:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Unit Name
            quiesce:
              type: bool
            profile:
              type: str
              required: true
              description: 'Name of Unit Profile

                '
            groups:
              type: dict
              keys:
                bgp_groups:
                  type: list
                  display_name: BGP Groups
                  items:
                    type: str
                    description: 'Name of BGP Group

                      '
                interface_groups:
                  type: list
                  items:
                    type: str
                    description: Name of Interface Group
  management_api_http:
    display_name: Management HTTP
    type: dict
    keys:
      enable_http:
        type: bool
      enable_https:
        type: bool
      https_ssl_profile:
        display_name: SSL Profile Name
        type: str
      default_services:
        type: bool
        description: 'Enable default services: capi-doc and tapagg'
      enable_vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              display_name: VRF Name
              type: str
              required: true
            access_group:
              display_name: Standard IPv4 ACL name
              type: str
            ipv6_access_group:
              display_name: Standard IPv6 ACL name
              type: str
      protocol_https_certificate:
        type: dict
        keys:
          certificate:
            type: str
            description: Name of certificate; private key must also be specified
          private_key:
            type: str
            description: Name of private key; certificate must also be specified
  management_api_models:
    display_name: Management API Models
    type: dict
    keys:
      providers:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
              valid_values:
              - sysdb
              - smash
            paths:
              type: list
              items:
                type: dict
                keys:
                  path:
                    type: str
                  disabled:
                    type: bool
                    default: false
  management_console:
    type: dict
    keys:
      idle_timeout:
        type: int
        min: 0
        max: 86400
        convert_types:
        - str
  management_cvx:
    type: dict
    display_name: Management CVX
    keys:
      shutdown:
        type: bool
      server_hosts:
        type: list
        items:
          type: str
          description: IP or hostname
  management_defaults:
    type: dict
    keys:
      secret:
        type: dict
        keys:
          hash:
            type: str
            valid_values:
            - md5
            - sha512
  management_interfaces:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Management Interface Name
        description:
          type: str
        shutdown:
          type: bool
        mtu:
          type: int
        vrf:
          type: str
          display_name: VRF Name
        ip_address:
          type: str
          display_name: IPv4_address/Mask
        ipv6_enable:
          type: bool
        ipv6_address:
          type: str
          display_name: IPv6_address/Mask
        type:
          type: str
          valid_values:
          - oob
          - inband
          default: oob
          description: For documentation purposes only
        gateway:
          type: str
          description: IPv4 address of default gateway in management VRF
        ipv6_gateway:
          type: str
          description: IPv6 address of default gateway in management VRF
  management_security:
    type: dict
    keys:
      entropy_source:
        type: str
      password:
        type: dict
        keys:
          minimum_length:
            type: int
            min: 1
            max: 32
            convert_types:
            - str
          encryption_key_common:
            type: bool
          encryption_reversible:
            type: str
      ssl_profiles:
        type: list
        display_name: SSL Profiles
        items:
          type: dict
          keys:
            name:
              type: str
            tls_versions:
              type: str
              display_name: TLS Versions
              description: 'List of allowed TLS versions as string

                '
            cipher_list:
              type: str
              description: 'cipher_list syntax follows the openssl cipher strings
                format.

                Colon (:) separated list of allowed ciphers as a string

                '
            certificate:
              type: dict
              keys:
                file:
                  type: str
                key:
                  type: str
  management_ssh:
    type: dict
    display_name: Management SSH
    keys:
      access_groups:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Standard ACL Name
            vrf:
              type: str
              display_name: VRF Name
      ipv6_access_groups:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Standard ACL Name
            vrf:
              type: str
              display_name: VRF Name
      idle_timeout:
        type: int
        convert_types:
        - str
        min: 0
        max: 86400
        description: Idle timeout in minutes
      cipher:
        description: Cryptographic ciphers for SSH to use
        type: list
        items:
          type: str
      key_exchange:
        description: Cryptographic key exchange methods for SSH to use
        type: list
        items:
          type: str
      mac:
        description: Cryptographic MAC algorithms for SSH to use
        type: list
        items:
          type: str
      hostkey:
        type: dict
        keys:
          server:
            description: SSH host key settings
            type: list
            items:
              type: str
      enable:
        description: Enable SSH daemon
        type: bool
      connection:
        type: dict
        keys:
          limit:
            type: int
            convert_types:
            - str
            min: 1
            max: 100
            description: Maximum total number of SSH sessions to device
          per_host:
            type: int
            convert_types:
            - str
            min: 1
            max: 20
            description: Maximum number of SSH sessions to device from a single host
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: VRF Name
            enable:
              description: Enable SSH in VRF
              type: bool
      log_level:
        type: str
        description: SSH daemon log level
  match_list_input:
    type: dict
    display_name: Match Lists
    keys:
      string:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Match-list Name
            sequence_numbers:
              type: list
              required: true
              primary_key: sequence
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  sequence:
                    type: int
                    required: true
                    display_name: Sequence ID
                    convert_types:
                    - str
                  match_regex:
                    type: str
                    required: true
                    display_name: Regular Expression
  mcs_client:
    type: dict
    display_name: MCS Client
    keys:
      shutdown:
        type: bool
      cvx_secondary:
        type: dict
        display_name: CVX Secondary
        keys:
          name:
            type: str
          shutdown:
            type: bool
          server_hosts:
            type: list
            items:
              type: str
              description: IP or hostname
  mlag_configuration:
    type: dict
    display_name: Multi-Chassis Link Aggregation (MLAG) Configuration
    keys:
      domain_id:
        type: str
      heartbeat_interval:
        type: int
        description: Heartbeat interval in milliseconds
        convert_types:
        - str
      local_interface:
        display_name: Interface Name
        type: str
      peer_address:
        type: str
        description: IPv4 Address
      peer_address_heartbeat:
        type: dict
        keys:
          peer_ip:
            type: str
            description: IPv4 Address
          vrf:
            display_name: VRF Name
            type: str
      dual_primary_detection_delay:
        type: int
        description: Delay in seconds
        min: 0
        max: 86400
        convert_types:
        - str
      dual_primary_recovery_delay_mlag:
        type: int
        description: Delay in seconds
        min: 0
        max: 86400
        convert_types:
        - str
      dual_primary_recovery_delay_non_mlag:
        type: int
        description: Delay in seconds
        min: 0
        max: 86400
        convert_types:
        - str
      peer_link:
        display_name: Port-Channel ID
        type: str
      reload_delay_mlag:
        type: str
        description: Delay in seconds <0-86400> or infinity
        convert_types:
        - int
      reload_delay_non_mlag:
        type: str
        description: Delay in seconds <0-86400> or infinity
        convert_types:
        - int
  monitor_connectivity:
    type: dict
    keys:
      shutdown:
        type: bool
      interval:
        type: int
        convert_types:
        - str
      interface_sets:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
            interfaces:
              type: str
              description: 'Interface range(s) should be of same type, Ethernet, Loopback,
                Management etc.

                Multiple interface ranges can be specified separated by ","

                '
      local_interfaces:
        type: str
      hosts:
        type: list
        items:
          type: dict
          keys:
            name:
              display_name: Host Name
              type: str
            description:
              type: str
            ip:
              type: str
            local_interfaces:
              type: str
            url:
              type: str
      vrfs:
        type: list
        items:
          type: dict
          keys:
            name:
              display_name: VRF Name
              type: str
            description:
              type: str
            interface_sets:
              type: list
              items:
                type: dict
                keys:
                  name:
                    type: str
                  interfaces:
                    type: str
            local_interfaces:
              type: str
            hosts:
              type: list
              items:
                type: dict
                keys:
                  name:
                    display_name: Host name
                    type: str
                  description:
                    type: str
                  ip:
                    type: str
                  local_interfaces:
                    type: str
                  url:
                    type: str
  monitor_sessions:
    type: list
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          description: Session Name
        sources:
          type: list
          items:
            type: dict
            keys:
              name:
                type: str
                description: Interface name, range or comma separated list
              direction:
                type: str
                valid_values:
                - rx
                - tx
                - both
              access_group:
                type: dict
                keys:
                  type:
                    type: str
                    valid_values:
                    - ip
                    - ipv6
                    - mac
                  name:
                    description: ACL Name
                    type: str
                  priority:
                    type: int
                    convert_types:
                    - str
        destinations:
          type: list
          items:
            type: str
            description: '''cpu'' or interface name, range or comma separated list'
        encapsulation_gre_metadata_tx:
          type: bool
          display_name: Encapsulation GRE metadata TX
        header_remove_size:
          type: int
          description: Number of bytes to remove from header
          convert_types:
          - str
        access_group:
          type: dict
          keys:
            type:
              type: str
              valid_values:
              - ip
              - ipv6
              - mac
            name:
              display_name: ACL Name
              type: str
        rate_limit_per_ingress_chip:
          type: str
          description: "Ratelimit and unit as string.\nExamples:\n  \"100000 bps\"\n
            \ \"100 kbps\"\n  \"10 mbps\"\n"
        rate_limit_per_egress_chip:
          type: str
          description: "Ratelimit and unit as string.\nExamples:\n  \"100000 bps\"\n
            \ \"100 kbps\"\n  \"10 mbps\"\n"
        sample:
          type: int
          convert_types:
          - str
        truncate:
          type: dict
          keys:
            enabled:
              type: bool
            size:
              type: int
              description: Size in bytes
              convert_types:
              - str
  mpls:
    type: dict
    display_name: MPLS
    keys:
      ip:
        type: bool
      ldp:
        type: dict
        keys:
          interface_disabled_default:
            type: bool
          router_id:
            type: str
            display_name: Router ID
          shutdown:
            type: bool
          transport_address_interface:
            display_name: Interface Name
            type: str
  name_server:
    type: dict
    keys:
      source:
        type: dict
        keys:
          vrf:
            display_name: VRF Name
            type: str
      nodes:
        type: list
        items:
          type: str
  peer_filters:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Peer-filter Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              match:
                type: str
                required: true
                description: 'Match as string

                  Example: "as-range 1-100 result accept"'
  platform:
    type: dict
    keys:
      trident:
        type: dict
        keys:
          forwarding_table_partition:
            type: str
            convert_types:
            - int
      sand:
        type: dict
        description: Most of the platform sand options are hardware dependant and
          optional
        keys:
          qos_maps:
            type: list
            display_name: QOS Maps
            items:
              type: dict
              keys:
                traffic_class:
                  type: int
                  min: 0
                  max: 7
                  convert_types:
                  - str
                to_network_qos:
                  type: int
                  display_name: To Network QOS
                  min: 0
                  max: 63
                  convert_types:
                  - str
          lag:
            type: dict
            display_name: LAG
            keys:
              hardware_only:
                type: bool
              mode:
                type: str
          forwarding_mode:
            type: str
          multicast_replication:
            type: dict
            keys:
              default:
                type: str
                valid_values:
                - ingress
                - egress
  policy_maps:
    type: dict
    display_name: Policy-Maps
    keys:
      pbr:
        type: list
        display_name: PBR Policy-Maps
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Policy-Map Name
            classes:
              type: list
              primary_key: name
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  name:
                    type: str
                    display_name: Class Name
                  index:
                    type: int
                    convert_types:
                    - str
                  drop:
                    description: '''drop'' and ''set'' are mutually exclusive'
                    display_name: Drop
                    type: bool
                  set:
                    description: '''drop'' and ''set'' are mutually exclusive'
                    display_name: Set Nexthop
                    type: dict
                    keys:
                      nexthop:
                        type: dict
                        keys:
                          ip_address:
                            type: str
                            description: IPv4 or IPv6 Address
                          recursive:
                            type: bool
      qos:
        type: list
        display_name: QOS Policy-Maps
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Policy-Map Name
            classes:
              type: list
              primary_key: name
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  name:
                    type: str
                    display_name: Class Name
                  set:
                    type: dict
                    keys:
                      cos:
                        type: int
                        convert_types:
                        - str
                        display_name: COS
                      dscp:
                        type: str
                        convert_types:
                        - int
                        display_name: DSCP
                      traffic_class:
                        type: int
                        convert_types:
                        - str
                        display_name: Traffic-class
                      drop_precedence:
                        type: int
                        convert_types:
                        - str
                        display_name: Drop-precedence
  prefix_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Prefix-list Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "permit 10.255.0.0/27 eq 32"'
  redundancy:
    type: dict
    keys:
      protocol:
        type: str
        display_name: Redundancy Protocol
  route_maps:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Route-map Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              description:
                type: str
              match:
                type: list
                description: List of "match" statements
                items:
                  type: str
                  description: 'Match as string

                    Example: "ip address prefix-list PL-LOOPBACKS-EVPN-OVERLAY"

                    '
              set:
                type: list
                description: List of "set" statements
                items:
                  type: str
                  description: 'Set as string

                    Example: "origin incomplete"

                    '
              sub_route_map:
                type: str
                description: Name of Sub-Route-map
              continue:
                type: dict
                keys:
                  enabled:
                    type: bool
                  sequence_number:
                    type: int
                    convert_types:
                    - str
  router_general:
    type: dict
    display_name: Router General configuration
    keys:
      router_id:
        type: dict
        keys:
          ipv4:
            type: str
            display_name: IPv4 Address
          ipv6:
            type: str
            display_name: IPv6 Address
      nexthop_fast_failover:
        type: bool
        default: false
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Destination-VRF
            leak_routes:
              type: list
              items:
                type: dict
                keys:
                  source_vrf:
                    type: str
                    display_name: Source-VRF
                  subscribe_policy:
                    type: str
                    display_name: Route-Map Policy
            routes:
              type: dict
              keys:
                dynamic_prefix_lists:
                  type: list
                  items:
                    type: dict
                    keys:
                      name:
                        type: str
                        display_name: Dynamic Prefix List Name
  router_igmp:
    type: dict
    display_name: Router IGMP Configuration
    keys:
      ssm_aware:
        type: bool
  router_isis:
    type: dict
    display_name: Router ISIS
    keys:
      instance:
        type: str
        description: ISIS Instance Name
      net:
        type: str
        description: CLNS Address like "49.0001.0001.0000.0001.00"
      router_id:
        type: str
        display_name: Router ID
        description: IPv4 Address
      is_type:
        type: str
        display_name: IS Type
        valid_values:
        - level-1
        - level-1-2
        - level-2
      log_adjacency_changes:
        type: bool
      mpls_ldp_sync_default:
        type: bool
        display_name: MPLS LDP Sync Default
      timers:
        type: dict
        keys:
          local_convergence:
            type: dict
            keys:
              protected_prefixes:
                type: bool
              delay:
                type: int
                convert_types:
                - str
                default: 10000
                description: Delay in milliseconds.
      advertise:
        type: dict
        keys:
          passive_only:
            type: bool
      address_family:
        type: list
        items:
          type: str
          valid_values:
          - ipv4
          - ipv6
          - ipv4 unicast
          - ipv6 unicast
          description: Address Family
      isis_af_defaults:
        type: list
        display_name: ISIS AF Defaults
        items:
          type: str
          description: 'EOS CLI rendered under the address families

            Example "maximum-paths 64"

            '
      redistribute_routes:
        type: list
        items:
          type: dict
          keys:
            source_protocol:
              type: str
              required: true
              valid_values:
              - bgp
              - connected
              - isis
              - ospf
              - ospfv3
              - static
            route_map:
              type: str
              description: Route-map name
            include_leaked:
              type: bool
            ospf_route_type:
              type: str
              display_name: OSPF Route Type
              valid_values:
              - external
              - internal
              - nssa-external
              description: ospf_route_type is required with source_protocols 'ospf'
                and 'ospfv3'
      address_family_ipv4:
        type: dict
        display_name: Address Family IPv4
        keys:
          maximum_paths:
            type: int
            convert_types:
            - str
            min: 1
            max: 128
          fast_reroute_ti_lfa:
            type: dict
            display_name: Fast Reroute TI LFA
            keys:
              mode:
                type: str
                valid_values:
                - link-protection
                - node-protection
              level:
                type: str
                valid_values:
                - level-1
                - level-2
              srlg:
                type: dict
                display_name: SRLG
                description: Shared Risk Link Group
                keys:
                  enable:
                    type: bool
                  strict:
                    type: bool
          tunnel_source_labeled_unicast:
            type: dict
            keys:
              enabled:
                type: bool
              rcf:
                type: str
                display_name: RCF
                description: Route Control Function
      address_family_ipv6:
        type: dict
        display_name: Address Family IPv6
        keys:
          maximum_paths:
            type: int
            convert_types:
            - str
            min: 1
            max: 128
          fast_reroute_ti_lfa:
            type: dict
            display_name: Fast Reroute TI LFA
            keys:
              mode:
                type: str
                valid_values:
                - link-protection
                - node-protection
              level:
                type: str
                valid_values:
                - level-1
                - level-2
                description: Optional, default is to protect all levels
              srlg:
                type: dict
                display_name: SRLG
                description: Shared Risk Link Group
                keys:
                  enable:
                    type: bool
                  strict:
                    type: bool
      segment_routing_mpls:
        type: dict
        display_name: Segment Routing MPLS
        keys:
          enabled:
            type: bool
          router_id:
            type: str
            display_name: Router ID
          prefix_segments:
            type: list
            convert_types:
            - dict
            items:
              type: dict
              keys:
                prefix:
                  type: str
                index:
                  type: int
                  convert_types:
                  - str
      no_passive_interfaces:
        type: list
        description: Unused key - to be removed from eos_designs.
  router_l2_vpn:
    type: dict
    display_name: Router L2 VPN
    keys:
      nd_rs_flooding_disabled:
        type: bool
        display_name: ND RS Flooding Disabled
      virtual_router_nd_ra_flooding_disabled:
        type: bool
        display_name: Virtual Router ND RA Flooding Disabled
      arp_selective_install:
        type: bool
        display_name: ARP Selective Install
      arp_proxy:
        type: dict
        display_name: ARP Proxy
        keys:
          prefix_list:
            type: str
            description: Prefix-list Name
  router_pim_sparse_mode:
    type: dict
    display_name: Routing PIM Sparse Mode
    keys:
      ipv4:
        type: dict
        display_name: IPv4
        keys:
          ssm_range:
            type: str
            description: IPv4 Prefix associated with SSM
          rp_addresses:
            type: list
            display_name: RP Addresses
            primary_key: address
            convert_types:
            - dict
            items:
              type: dict
              keys:
                address:
                  type: str
                  required: true
                  display_name: RP Address
                groups:
                  type: list
                  convert_types:
                  - dict
                  items:
                    type: str
          anycast_rps:
            type: list
            display_name: Anycast RPs
            primary_key: address
            convert_types:
            - dict
            items:
              type: dict
              keys:
                address:
                  type: str
                  required: true
                  display_name: Anycast RP Address
                other_anycast_rp_addresses:
                  type: list
                  display_name: Other Anycast RP Addresses
                  primary_key: address
                  convert_types:
                  - dict
                  items:
                    type: dict
                    keys:
                      address:
                        type: str
                        required: true
                        display_name: Other Anycast RP Address
                      register_count:
                        type: int
                        convert_types:
                        - str
      vrfs:
        type: list
        display_name: VRFs
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: VRF Name
            ipv4:
              type: dict
              keys:
                rp_addresses:
                  type: list
                  display_name: RP Addresses
                  items:
                    type: dict
                    keys:
                      address:
                        type: str
                        display_name: RP Address
                      groups:
                        type: list
                        items:
                          type: str
  service_routing_configuration_bgp:
    type: dict
    display_name: Service Routing Configuration BGP
    keys:
      no_equals_default:
        type: bool
  service_routing_protocols_model:
    type: str
    valid_values:
    - multi-agent
    - ribd
  sflow:
    type: dict
    display_name: Sflow
    keys:
      sample:
        type: int
        convert_types:
        - str
      dangerous:
        type: bool
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: VRF
            destinations:
              type: list
              primary_key: destination
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  destination:
                    type: str
                    display_name: Sflow Destination IP
                  port:
                    type: int
                    display_name: Port Number
                    convert_types:
                    - str
            source_interface:
              type: str
              display_name: Source Interface
      destinations:
        type: list
        primary_key: destination
        convert_types:
        - dict
        items:
          type: dict
          keys:
            destination:
              type: str
              display_name: Sflow Destination IP
            port:
              type: int
              display_name: Port Number
              convert_types:
              - str
      source_interface:
        type: str
        display_name: Source Interface
      interface:
        type: dict
        keys:
          disable:
            type: dict
            keys:
              default:
                type: bool
      run:
        type: bool
      hardware_acceleration:
        type: dict
        keys:
          enabled:
            type: bool
          sample:
            type: int
            convert_types:
            - str
          modules:
            type: list
            primary_key: name
            items:
              type: dict
              keys:
                name:
                  type: str
                enabled:
                  type: bool
                  default: true
  spanning_tree:
    type: dict
    keys:
      root_super:
        type: bool
      edge_port:
        type: dict
        keys:
          bpdufilter_default:
            type: bool
          bpduguard_default:
            type: bool
      mode:
        type: str
        valid_values:
        - mstp
        - rstp
        - rapid-pvst
        - none
      bpduguard_rate_limit:
        type: dict
        keys:
          default:
            type: bool
          count:
            type: int
            convert_types:
            - str
            description: Maximum number of BPDUs per timer interval
      rstp_priority:
        type: int
        convert_types:
        - str
      mst:
        type: dict
        keys:
          pvst_border:
            type: bool
          configuration:
            type: dict
            keys:
              name:
                type: str
              revision:
                type: int
                convert_types:
                - str
                description: 0-65535
              instances:
                type: list
                primary_key: id
                convert_types:
                - dict
                items:
                  type: dict
                  keys:
                    id:
                      type: int
                      convert_types:
                      - str
                      display_name: Instance ID
                    vlans:
                      type: str
                      convert_types:
                      - int
                      description: '"< vlan_id >, < vlan_id >-< vlan_id >"

                        Example: 15,16,17,18

                        '
      mst_instances:
        type: list
        primary_key: id
        convert_types:
        - dict
        items:
          type: dict
          keys:
            id:
              type: str
              convert_types:
              - int
              display_name: Instance ID
            priority:
              type: int
              convert_types:
              - str
      no_spanning_tree_vlan:
        type: str
        convert_types:
        - int
        description: '"< vlan_id >, < vlan_id >-< vlan_id >"

          Example: 105,202,505-506

          '
      rapid_pvst_instances:
        type: list
        primary_key: id
        convert_types:
        - dict
        items:
          type: dict
          keys:
            id:
              type: str
              convert_types:
              - int
              description: '"< vlan_id >, < vlan_id >-< vlan_id >"

                Example: 105,202,505-506

                '
            priority:
              type: int
              convert_types:
              - str
  standard_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Standard Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ip any any"'
  static_routes:
    type: list
    display_name: Static Routes
    items:
      type: dict
      keys:
        vrf:
          type: str
          display_name: VRF Name
          description: If vrf_name = default the route will be placed in the GRT
        destination_address_prefix:
          type: str
          display_name: IPv4_network/Mask
        interface:
          type: str
        gateway:
          type: str
          display_name: IPv4 Address
        distance:
          type: int
          convert_types:
          - str
          min: 1
          max: 255
        tag:
          type: int
          convert_types:
          - str
          min: 0
          max: 4294967295
        name:
          type: str
          display_name: Description
        metric:
          type: int
          convert_types:
          - str
          min: 0
          max: 4294967295
  switchport_default:
    type: dict
    keys:
      mode:
        type: str
        valid_values:
        - routed
        - access
      phone:
        type: dict
        keys:
          cos:
            type: int
            display_name: COS
            convert_types:
            - str
            min: 0
            max: 7
          trunk:
            type: str
            valid_values:
            - tagged
            - untagged
          vlan:
            type: int
            display_name: VLAN ID
            convert_types:
            - str
            min: 1
            max: 4094
  system:
    type: dict
    keys:
      control_plane:
        type: dict
        keys:
          tcp_mss:
            type: dict
            keys:
              ipv4:
                type: int
                description: Segment size
              ipv6:
                type: int
                description: Segment size
          ipv4_access_groups:
            type: list
            primary_key: acl_name
            convert_types:
            - dict
            items:
              type: dict
              keys:
                acl_name:
                  type: str
                vrf:
                  type: str
          ipv6_access_groups:
            type: list
            primary_key: acl_name
            convert_types:
            - dict
            items:
              type: dict
              keys:
                acl_name:
                  type: str
                vrf:
                  type: str
  tcam_profile:
    type: dict
    display_name: Hardware TCAM Profiles
    keys:
      system:
        type: str
        description: 'TCAM profile name to activate

          '
      profiles:
        type: list
        secondary_key: config
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Tcam-Profile Name
            config:
              type: str
              required: true
              description: 'TCAM Profile Config. Since these can be very long, it
                is often a good idea to import the config from a file.

                Example: "{{lookup(''file'', ''{{ root_dir }}/inventory/TCAM_TRAFFIC_POLICY.conf'')}}"'
  trackers:
    type: list
    primary_key: name
    items:
      type: dict
      keys:
        name:
          type: str
          description: Name of tracker object
          required: true
        interface:
          type: str
          description: Name of tracked interface
          required: true
        tracked_property:
          type: str
          default: line-protocol
          description: Property to track
  virtual_source_nat_vrfs:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Virtual Source NAT
    items:
      type: dict
      keys:
        name:
          type: str
          display_name: VRF Name
        ip_address:
          type: str
          display_name: IPv4 Address
  vlan_internal_order:
    type: dict
    display_name: Internal VLAN Order
    keys:
      allocation:
        type: str
        required: true
        valid_values:
        - ascending
        - descending
      range:
        type: dict
        required: true
        keys:
          beginning:
            type: int
            min: 1
            max: 4094
            required: true
            display_name: Vlan ID
            convert_types:
            - str
          ending:
            type: int
            min: 1
            max: 4094
            required: true
            display_name: Vlan ID
            convert_types:
            - str
  vlans:
    type: list
    display_name: VLANs
    primary_key: id
    convert_types:
    - dict
    items:
      type: dict
      keys:
        id:
          type: int
          convert_types:
          - str
          display_name: VLAN ID
        name:
          type: str
          display_name: VLAN Name
        state:
          type: str
          valid_values:
          - active
          - suspend
        trunk_groups:
          type: list
          items:
            type: str
            display_name: Trunk Group Name
        private_vlan:
          type: dict
          keys:
            type:
              type: str
              valid_values:
              - community
              - isolated
            primary_vlan:
              type: int
              convert_types:
              - str
              display_name: Primary VLAN ID
        tenant:
          type: str
          description: Key only used for documentation or validation purposes
  vmtracer_sessions:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: VM Tracer Sessions
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Vmtracer Session Name
        url:
          type: str
          display_name: URL
        username:
          type: str
        password:
          type: str
          description: Type 7 Password Hash
        autovlan_disable:
          type: bool
        source_interface:
          type: str
