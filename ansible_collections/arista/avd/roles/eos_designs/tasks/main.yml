---
- name: "Collection {{ ansible_collection_name }} version {{ version }}{{ ('(git ' ~ git_tag ~ ')') if git_tag }} loaded from {{ collection_path }}"
  tags: [always, avd_version]
  ansible.builtin.set_fact:
    avd_collection_version: version
  vars:
    versions: "{{ lookup('pipe', 'ansible-galaxy collection list --format yaml ' ~ ansible_collection_name) | from_yaml }}"
    collection_path: "{{ (role_path | split('/'))[0:-4] | join('/') }}"
    version: "{{ versions[collection_path][ansible_collection_name].version | default('Unknown') }}"
    git_tag: "{{ lookup('pipe', 'git -C ' ~ collection_path ~ ' describe --tags --always 2>/dev/null', errors='ignore') }}"
  run_once: True
  failed_when: False

- name: Create required output directories if not present
  tags: [build, provision]
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  loop:
    - "{{ structured_dir }}"
    - "{{ fabric_dir }}"
  delegate_to: localhost
  run_once: True

- name: Set eos_designs facts
  tags: [build, provision, facts]
  arista.avd.eos_designs_facts:
    avd_switch_facts: True
    avd_topology_facts: True
  check_mode: False
  run_once: True

- name: Set eos_designs facts per device
  tags: [build, provision, facts]
  ansible.builtin.set_fact:
    switch: "{{ avd_switch_facts[inventory_hostname].switch }}"
  delegate_to: localhost
  changed_when: False

- name: Generate YAML file with hostvars (only for debugging)
  tags: [debug, never]
  arista.avd.yaml_templates_to_facts:
    templates:
      - template: debug/generate-debug-vars.j2
    dest: "{{ structured_dir }}/{{ inventory_hostname }}-debug-vars.yml"
    mode: 0664
  delegate_to: localhost
  changed_when: False

- name: Generate device configuration in structured format
  tags: [build, provision]
  arista.avd.yaml_templates_to_facts:
    templates: "{{ templates.structured_config }}"
    dest: "{{ structured_dir }}/{{ inventory_hostname }}.{{ avd_structured_config_file_format }}"
    template_output: True
    remove_avd_switch_facts: True
  delegate_to: localhost
  check_mode: False
  register: structured_config

- name: Generate fabric documentation
  tags: [build, provision, documentation]
  run_once: True
  delegate_to: localhost
  check_mode: False
  ansible.builtin.copy:
    content: "{{ lookup('template','documentation/fabric-documentation.j2') | arista.avd.add_md_toc(skip_lines=3) }}"
    dest: "{{ fabric_dir }}/{{ fabric_name }}-documentation.md"
    mode: 0664

- name: Generate fabric point-to-point links summary in csv format.
  tags: [build, provision, documentation]
  ansible.builtin.template:
    src: documentation/fabric-p2p-links.j2
    dest: "{{ fabric_dir }}/{{ fabric_name }}-p2p-links.csv"
    mode: 0664
  delegate_to: localhost
  run_once: True
  check_mode: False

- name: Generate fabric topology in csv format.
  tags: [build, provision, documentation]
  ansible.builtin.template:
    src: documentation/fabric-topology.j2
    dest: "{{ fabric_dir }}/{{ fabric_name }}-topology.csv"
    mode: 0664
  delegate_to: localhost
  run_once: True
  check_mode: False
