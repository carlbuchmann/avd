router_bgp:

{% if switch.overlay_role == "server" %}
  bgp_cluster_id: {{ switch.router_id }}
{% endif %}

  peer_groups:
    {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}:
      type: evpn
      update_source: Loopback0
      remote_as: {{ switch.bgp_as }}
      bfd: true
      password: "{{ bgp_peer_groups.MPLS_OVERLAY_PEERS.password }}"
      send_community: all
      maximum_routes: 0
{% if switch.overlay_role == "server" %}
      route_reflector_client: true
{% endif %}

  address_family_ipv4:
    peer_groups:
      {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}:
        activate: false

  address_family_evpn:
    neighbor_default_encapsulation:
      mpls: true
{% if switch.overlay_role == "client" %}
      next_hop_self:
        source_interface: Loopback0
{% endif %}
    peer_groups:
      {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}:
        activate: true
{% if switch.vtep_ip is arista.avd.defined %}
        route_map_in: RM-EVPN-SOO-IN
        route_map_out: RM-EVPN-SOO-OUT
{% endif %}
{% if switch.vtep_ip is arista.avd.defined and evpn_hostflap_detection is arista.avd.defined %}
    evpn_hostflap_detection:
      window: {{ evpn_hostflap_detection.window | arista.avd.default(180) }}
      threshold: {{ evpn_hostflap_detection.threshold | arista.avd.default(5) }}
      enabled: {{ evpn_hostflap_detection.enabled | arista.avd.default(true) }}
{% endif %}

  address_family_vpn_ipv4:
    neighbor_default_encapsulation:
      mpls: true
{% if switch.overlay_role == "client" %}
      next_hop_self:
        source_interface: Loopback0
{% endif %}
    peer_groups:
      {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}:
        activate: true

{% if evpn_overlay_bgp_rtc is arista.avd.defined(true) %}
  address_family_rtc:
    peer_groups:
      {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}:
        activate: true
{%     if switch.overlay_role == "server" %}
        default_route_target:
          only: true
{%     endif %}
{% endif %}

{# Overlay network peering #}
  neighbors:
{% for mpls_route_server in overlay_data.mpls_route_servers | arista.avd.natural_sort %}
    {{ overlay_data.mpls_route_servers[mpls_route_server].ip_address }}:
      peer_group: {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}
      description: {{ mpls_route_server }}
{% endfor %}
{% for mpls_route_client in overlay_data.mpls_route_clients | arista.avd.natural_sort %}
    {{ overlay_data.mpls_route_clients[mpls_route_client].ip_address }}:
      peer_group: {{ bgp_peer_groups.MPLS_OVERLAY_PEERS.name | arista.avd.default("MPLS-OVERLAY-PEERS") }}
      description: {{ mpls_route_client }}
{% endfor %}
