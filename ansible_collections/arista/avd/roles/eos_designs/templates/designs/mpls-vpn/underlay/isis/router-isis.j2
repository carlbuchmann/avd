router_isis:
  instance: MPLS_UNDERLAY
  log_adjacency_changes: true
  net: {{ switch.isis_net }}
  router_id: {{ switch.router_id }}
  no_passive_interfaces:
{% for link_interface in underlay_data.links | arista.avd.natural_sort %}
{%     set link = underlay_data.links[link_interface] %}
{# L3 P2P interfaces #}
{%     if link.type is arista.avd.defined('underlay_p2p') %}
    - {{ link_interface }}
{%     endif %}
{% endfor %}
{% if switch.mlag_l3 is arista.avd.defined(true) %}
    - Vlan{{ switch.mlag_peer_l3_vlan }}
{% endif %}
  is_type: {{ switch.is_type }}
{% if isis_advertise_passive_only is arista.avd.defined(true) %}
  advertise_passive_only: true
{% endif %}
{% if label_distribution.protocol is arista.avd.defined("ldp") %}
  mpls_ldp_sync_default: true
{% endif %}
{% if isis_ti_lfa.enabled is not arista.avd.defined(false) %}
  timers:
    local_convergence:
      delay: {{ isis_ti_lfa.local_convergence_delay | arista.avd.default("10000") }}
      protected_prefixes: true
{% endif %}
  address_family: ['ipv4 unicast', 'ipv6 unicast']
  isis_af_defaults:
    - maximum-paths {{ isis_maximum_paths }}
{% if isis_ti_lfa.protection is arista.avd.defined("link") %}
    - fast-reroute ti-lfa mode link-protection {{isis_underlay_level | arista.avd.default("level-2") }}
{% elif isis_ti_lfa.protection is arista.avd.defined("node") %}
    - fast-reroute ti-lfa mode node-protection {{isis_underlay_level | arista.avd.default("level-2") }}
{% endif %}
{# If label_distribution.protocol is set to isis-sr we also configure that #}
{% if label_distribution.protocol is arista.avd.defined("isis-sr") %}
  segment_routing_mpls:
    router_id: {{ switch.router_id }}
    enabled: true
{% endif %}
